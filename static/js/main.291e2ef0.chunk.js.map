{"version":3,"sources":["components/Header/index.js","utils/API.js","components/SearchForm/SearchForm.js","components/SearchResults/SearchResults.js","components/Employee/Employee.js","components/Table/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","axios","get","SearchForm","props","id","value","search","onChange","handleInputChange","name","list","type","placeholder","aria-label","SearchResults","results","filter","first","toLowerCase","last","searchName","includes","map","result","src","picture","medium","alt","cell","href","email","target","rel","moment","dob","date","format","login","uuid","Employee","className-th","Table","state","order","componentDidMount","API","then","res","setState","data","catch","err","console","log","event","handleSubmit","preventDefault","ascEmployees","sort","x","y","class","this","onClick","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.291e2ef0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nfunction Header() {\r\n    return(\r\n        <header className=\"header-blue\">\r\n            <div className=\"white\">\r\n                <h1 className=\"mb-3\">Employee Directory</h1>\r\n                <h5 className=\"mb-3\">Click on carrots to filter by heading or use the search bar to narrow your results</h5>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header","import axios from 'axios';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    getEmployees: function() {\r\n        return axios.get(\"https://randomuser.me/api/?nat=us&results=50\");\r\n    },\r\n};","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n\r\n            <div className=\"navbar-collapse row\" id=\"navbarNav\">\r\n\r\n                <div className=\"searchBox\"><form className=\"form-inline\">\r\n                        <input\r\n                            value= {props.search}\r\n                            onChange= {props.handleInputChange}\r\n                            name=\"term\"\r\n                            list=\"term\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"term\"\r\n                            placeholder=\"Search\" \r\n                            aria-label=\"Search\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default SearchForm","import React from \"react\";\nimport moment from \"moment\";\nimport \"./style.css\";\n\nfunction SearchResults(props) {\n  return (\n    <tbody>\n      {props.results.filter(search => {\n        let name = search.name.first.toLowerCase() + search.name.last.toLowerCase();\n        let searchName = props.value.toLowerCase()\n        let result = name.includes(searchName)\n        return result\n      }).map(result => (\n        <tr key ={result.login.uuid}>\n          <td className= \"image\">\n          <img src={result.picture.medium} alt={ `headshot of: ${result.name.first} ${result.name.last}`} ></img>\n          </td>\n          <td className=\"name\">\n            {result.name.first} {result.name.last}\n          </td>\n          <td className=\"phone\">\n            {result.cell}\n          </td>\n          <td className=\"email\">\n            <a href={ `mailto:${result.email}` } target=\"_blank\" rel=\"noreferrer\">\n              {result.email}\n            </a>\n          </td>\n          <td className=\"dob\">\n            {moment(result.dob.date).format(\"L\")}{}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nexport default SearchResults;\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nfunction Employee(props) {\r\n  return (\r\n    <tbody>\r\n    {props.results.map(result =>(\r\n      <tr key={result.login.uuid}>\r\n        <td className=\"image\">\r\n          <img src={result.picture.medium} alt={`headshot of: ${result.name.first} ${result.name.last}`} ></img>\r\n        </td>\r\n        <td className=\"name\">\r\n            {result.name.first} {result.name.last}\r\n          </td>\r\n          <td className=\"phone\">\r\n            {result.cell}\r\n          </td>\r\n          <td className=\"email\">\r\n            <a href={ `mailto:${result.email}` } target=\"_blank\" rel=\"noreferrer\">\r\n              {result.email}\r\n            </a>\r\n          </td>\r\n          <td className-th=\"dob\">\r\n            {moment(result.dob.date).format(\"L\")}{}\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nexport default Employee;","import React, { Component } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport SearchResults from \"../SearchResults/SearchResults\";\r\nimport Employee from \"../Employee/Employee\";\r\nimport \"./styles.css\";\r\n\r\nclass Table extends Component {\r\n    state = {\r\n        search: \"\",\r\n        result: [],\r\n        order: []\r\n    };\r\n    // When this component mounts\r\n    componentDidMount = () => {\r\n        API.getEmployees()\r\n            .then(res => this.setState({ result: res.data.results}))\r\n            .catch(err => console.log(err));\r\n    }\r\n    handleInputChange = event => {\r\n        this.setState({ search: event.target.value })\r\n    };\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        if (`${this.state.order}`=== \"\"|| `${this.state.order}` === \"descending\") {\r\n            this.setState({\r\n                order:\"ascending\"\r\n            })\r\n            const ascEmployees = this.state.result.sort((x,y) => {\r\n                let nameX = x.name.last;\r\n                let nameY = y.name.last;\r\n                if (nameX < nameY) {\r\n                    return -1\r\n                }\r\n                return 0;\r\n            });\r\n            this.setState({\r\n                result: ascEmployees\r\n            })\r\n        } \r\n        else if (`${this.state.order}` === \"ascending\"){\r\n            this.setState({\r\n                order: \"descending\"\r\n            })\r\n            const ascEmployees = this.state.result.sort((x,y) => {\r\n                let nameX = x.name.last;\r\n                let nameY = y.name.last;\r\n                if (nameX > nameY) {\r\n                    return -1\r\n                }\r\n                return 0;\r\n            });\r\n            this.setState({\r\n                result: ascEmployees\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div class=\"tablewrap\">\r\n                <SearchForm \r\n                    value={this.state.search}\r\n                    handleInputChange={this.handleInputChange}\r\n                />\r\n                <table id=\"table\" className=\"table table-striped table-hover table-condensed\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                Image\r\n                            </th>\r\n                            <th className=\"pointerName\" onClick={this.handleSubmit}>\r\n                                Name ↕\r\n                            </th>\r\n                            <th>\r\n                                Phone\r\n                            </th>\r\n                            <th>\r\n                                Email\r\n                            </th>\r\n                            <th>\r\n                                DOB \r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {!this.state.search ? (\r\n                  <Employee results={this.state.result} />\r\n              ) : (\r\n                  <SearchResults results={this.state.result} value={this.state.search} />\r\n              )}\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Table;\r\n","import React from \"react\";\nimport './App.css';\n\nimport Header from \"./components/Header\";\nimport Table from \"./components/Table\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}